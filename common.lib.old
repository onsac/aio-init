# common.lib
declare -r TRUE=0
declare -r FALSE=1
declare -r USER=aio
declare -r TOKEN=onsac:3hevQqWGb2U4wNNA25LF
declare -r STEPS=$(wget -N --level=1 --no-cache --no-cookies --no-check-certificate -qO- https://raw.githubusercontent.com/onsac/aio-init/main/aio-init.sh | grep check_step | wc -l)
declare    STEP=1
print_line()
{
i=1
LINE=""
columns=$(tput cols)
while [ "$i" -lt "$columns" ]
do
  LINE=$LINE"="
  ((i=i+1))
done
echo $LINE
}

pw1()
{
   wget --no-cache -O /tmp/.init.md http://raw.githubusercontent.com/onsac/aio-init/main/init.md 2>/dev/null
   if [ "$?" -ne "0" ]; then
      return $FALSE
   else
      PARTE=""
      for number in {1..8}
      do
          if [ "$number" -le "6" ]; then
             PARTE=${PARTE}$(grep  "$number -" /tmp/.init.md | cut -b 5)
          else
             PARTE=${PARTE}$(grep  "$number -" /tmp/.init.md | cut -b 5-6)
          fi
      done
      rm /tmp/.init.md 
      echo ${PARTE}
      return $TRUE
   fi
}

pw2()
{
   wget --no-cache -O /tmp/.init.md http://raw.githubusercontent.com/onsac/aio-init/main/init.md 2>/dev/null
   if [ "$?" -ne "0" ]; then
      return $FALSE
   else
      PARTE=""
      for number in {5..7}
      do
          if [ "$number" -eq "5" ]; then
             PARTE=${PARTE}$(grep  "$number -" /tmp/.init.md | cut -b 5-9)
          else
             if [ "$number" -eq "6" ]; then
                PARTE=${PARTE}$(grep  "$number -" /tmp/.init.md | cut -b 5)
             else
                PARTE=${PARTE}$(grep  "$number -" /tmp/.init.md | cut -b 5-6)
             fi
          fi
      done
      rm /tmp/.init.md
      echo ${PARTE}
      return $TRUE
   fi
}

check_step()
{
   seq=$1
   FILE="/tmp/steps.txt"
   if [ -f "$FILE" ]; then
      if [ "$(grep "$seq -" $FILE)" = "" ]; then
         return $TRUE
      else
         print_line
         grep "$seq -" $FILE
         print_line
         return $FALSE
      fi
   else
      touch $FILE
      chmod 777 $FILE
      return $TRUE
   fi
}
set_step()
{
   seq=$1
   texto=$2
   FILE="/tmp/steps.txt"
   echo "$seq - $texto" >>$FILE
   print_line
   echo "$seq - $texto"
   print_line
  
   return $TRUE
}

stop_step()
{
   seq=$1
   texto=$2
   print_line
   echo "$seq - $texto"
   print_line
   exit 1
}

# Purpose: Determine if current user is root or not
is_root_user()
{
   [ $(id -u) -eq 0 ] && return $TRUE || return $FALSE
}

